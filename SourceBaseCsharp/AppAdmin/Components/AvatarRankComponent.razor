@using MudThemeLibrary.Handlers

@if (!string.IsNullOrEmpty(_resolvedSrc))
{
    <div @attributes="_mergedAttributes">
        <!-- Lottie animation chạy phía sau -->
        <LottieSVGTheme JsonUrl="10674217.json" IsFromServer="false" />

        <!-- Ảnh avatar được bo viền -->
        <MudAvatar Size="Size" Class="border-solid border-2 mud-border-primary">
            <MudImage Src="@_resolvedSrc" />
        </MudAvatar>
    </div>
}
else
{
    <!-- Avatar mặc định nếu không có hình -->
    <MudAvatar Size="Size" Color="Color.Primary">
        <MudIcon Icon="@Icons.Material.Filled.AccountCircle" />
    </MudAvatar>
}

@code {
    /// <summary>
    /// Đường dẫn ảnh (URL hoặc base64).
    /// </summary>
    [Parameter] public string? Src { get; set; }

    /// <summary>
    /// Kích thước của avatar (Small, Medium, Large...).
    /// </summary>
    [Parameter] public MudBlazor.Size Size { get; set; } = MudBlazor.Size.Small;

    /// <summary>
    /// Lớp CSS bổ sung cho wrapper div (nếu có hình).
    /// </summary>
    [Parameter] public string? Class { get; set; }

    /// <summary>
    /// CSS style inline cho wrapper div (nếu có hình).
    /// </summary>
    [Parameter] public string? Style { get; set; }

    /// <summary>
    /// Các thuộc tính HTML bổ sung.
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    /// <summary>
    /// Tạo dictionary chứa toàn bộ attribute sẽ render ra ngoài div.
    /// Gồm: class, style và các thuộc tính khác.
    /// </summary>
    private Dictionary<string, object> _mergedAttributes
    {
        get
        {
            var attrs = new Dictionary<string, object>(AdditionalAttributes ?? []);

            // Gộp style
            if (!string.IsNullOrWhiteSpace(Style))
                attrs["style"] = Style;

            // Gộp class
            var baseClass = "avatar-rank d-flex";
            attrs["class"] = string.IsNullOrWhiteSpace(Class)
                ? baseClass
                : $"{baseClass} {Class}";

            return attrs;
        }
    }

    /// <summary>
    /// Xử lý đường dẫn ảnh đã hợp lệ, hỗ trợ cả base64 và đường dẫn từ server.
    /// </summary>
    private string _resolvedSrc
    {
        get
        {
            if (!string.IsNullOrWhiteSpace(Src))
            {
                // Nếu là base64
                if (Src.StartsWith("data:image/", StringComparison.OrdinalIgnoreCase))
                    return Src;

                // Nếu là đường dẫn file trên server
                var baseUrl = Configuration["Servers:Default:Url"]?.TrimEnd('/');
                return $"{baseUrl}/{Src.TrimStart('/')}";
            }

            return string.Empty;
        }
    }
}